{"version":3,"sources":["components/search-box/SearchBox.js","components/cardItem/Card.js","components/card-list/CardList.js","components/pagination/PaginationControled.js","apiKey.js","components/spinner/Spinner.js","components/no-results-screen/NoResultScreen.js","App.js","utils.js","index.js"],"names":["SearchBox","onChange","useState","isActive","setIsActive","className","type","placeholder","onFocus","onBlur","Card","element","onBookmarkChange","isBookmarked","thumbnail","name","link","path","extension","src","alt","onClick","CardList","characters","isBookmarkedFunction","map","item","id","useStyles","makeStyles","theme","root","marginTop","spacing","PaginationControlled","page","handleChange","count","classes","Typography","Pagination","Spinner","NoResultScreen","App","key","defaultValue","serialize","JSON","stringify","deserialize","parse","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","useRef","useEffect","prevKey","current","removeItem","setItem","useLocalStorageState","bookmarked","setBookmarked","searchField","setSearchField","setPage","pageCount","setPageCount","setCharacters","isLoading","setIsLoading","active","trim","offset","axios","url","params","apikey","nameStartsWith","limit","then","response","data","results","total","Math","ceil","catch","e","length","bookmarkedRender","slice","noResults","event","target","value","filter","some","ReactDOM","render","document","getElementById"],"mappings":"0UAmBeA,EAhBU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAExB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACI,uBACIC,UAAS,iBAAYF,EAAW,iBAAmB,IACnDG,KAAK,SACLC,YAAY,oBACZN,SAAYA,EACZO,QAAS,kBAAMJ,GAAY,IAC3BK,OAAQ,kBAAML,GAAY,OCKvBM,G,YAhBF,SAAC,GAAmD,IAAhDC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,aACjCC,EAAmBH,EAAnBG,UAAWC,EAAQJ,EAARI,KACZC,EAAOF,EAAUG,KAAO,IAAMH,EAAUI,UAE9C,OACI,yBAAQb,UAAU,OAAlB,UACA,qBAAKA,UAAU,YAAf,SACI,qBAAKc,IAAKH,EAAMI,IAAI,UAExB,4BAAYf,UAAU,aAAtB,SAAoCU,IACpC,wBAAQV,UAAS,yBAAoBQ,EAAe,aAAe,MAAQQ,QAAS,kBAAMT,EAAiBC,EAAcF,IAAzH,2BCKOW,EAdE,SAAC,GAA8D,IAA3DC,EAA0D,EAA1DA,WAAYX,EAA8C,EAA9CA,iBAAkBY,EAA4B,EAA5BA,qBAE/C,OACI,qBAAKnB,UAAU,WAAf,SAEIkB,EAAWE,KAAK,SAACC,GACb,IAAMb,EAAeW,EAAqBE,GAC1C,OAAO,cAAC,EAAD,CAAoBf,QAASe,EAAMb,aAAcA,EAAcD,iBAAkBA,GAAtEc,EAAKC,U,wBCLjCC,G,MAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,YAAa,CACXC,UAAWF,EAAMG,QAAQ,UAKhB,SAASC,EAAT,GAA6D,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,MAC3DC,EAAUV,IAChB,OACE,sBAAKvB,UAAWiC,EAAQP,KAAxB,UACE,eAACQ,EAAA,EAAD,oBAAmBJ,KACnB,cAACK,EAAA,EAAD,CAAYH,MAAOA,EAAOF,KAAMA,EAAMlC,SAAUmC,OCnB/C,I,iBCWQK,G,MARC,WACZ,OACI,qBAAKpC,UAAU,mBAAf,SACI,qBAAKA,UAAU,eCOZqC,G,MAVQ,WACnB,OACI,qBAAKrC,UAAU,mBAAf,SACI,mBAAGA,UAAU,4BAAb,8CCsHGsC,EAhHH,WAGV,MCbK,SAA8BC,GAAyF,IAApFC,EAAmF,uDAApE,GAAoE,yDAAL,GAAK,IAA9DC,iBAA8D,MAAlDC,KAAKC,UAA6C,MAAlCC,mBAAkC,MAApBF,KAAKG,MAAe,EAEzH,EAA4BhD,oBAAU,WAClC,IAAMiD,EAAsBC,OAAOC,aAAaC,QAAQV,GACxD,OAAGO,EACQF,EAAYE,GACQ,oBAAjBN,EAA8BA,IAAiBA,KAJjE,mBAAQU,EAAR,KAAeC,EAAf,KAOMC,EAAaC,iBAAOd,GAY1B,OAVAe,qBAAW,WACX,IAAMC,EAAUH,EAAWI,QACxBD,IAAYhB,GACXQ,OAAOC,aAAaS,WAAWF,GAEnCH,EAAWI,QAAUjB,EAErBQ,OAAOC,aAAaU,QAAQnB,EAAKE,EAAUS,MACxC,CAAEA,EAAOT,EAAWF,IAEhB,CAAEW,EAAOC,GDRoBQ,CAAqB,qBAA3D,mBAAQC,EAAR,KAAoBC,EAApB,KACA,EAAwChE,mBAAS,IAAjD,mBAAQiE,EAAR,KAAqBC,EAArB,KACA,EAA0BlE,mBAAS,GAAnC,mBAAQiC,EAAR,KAAckC,EAAd,KACA,EAAoCnE,mBAAS,GAA7C,mBAAQoE,EAAR,KAAmBC,EAAnB,KACA,EAAsCrE,mBAAS,IAA/C,mBAAQqB,EAAR,KAAoBiD,EAApB,KACA,EAAoCtE,oBAAS,GAA7C,mBAAQuE,EAAR,KAAmBC,EAAnB,KAGAf,qBAAW,WACT,IAAIgB,GAAS,EACP5D,EAAOoD,EAAYS,OACzB,GAAG7D,EAAK,CACJ2D,GAAa,GACb,IAAMG,EAAkB,IAAR1C,EAAK,GACrB2C,IAAM,CACJC,IAAK,sDACLC,OAAQ,CACNC,OHhCU,mCGiCVC,eAAgBnE,EAChBoE,MAAO,GACPN,OAAQA,KAGZO,MAAM,SAAAC,GACF,MAAyBA,EAASC,KAAKA,KAAhCC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MACbb,IACDH,EAAce,GACdhB,EAAakB,KAAKC,KAAMF,EAAQ,KAChCd,GAAa,OAGjBiB,OAAO,SAAAC,GACPpB,EAAc,IACdE,GAAa,WAIjBF,EAAc,IACdD,EAAakB,KAAKC,KAAMzB,EAAW4B,OAAS,KAC5CnB,GAAa,GAGf,OAAO,WAELC,GAAS,KAEP,CAACR,EAAahC,IAIpB,IA0BQ2D,EAAmB7B,EAAW8B,MAAiB,IAAV5D,EAAK,GAAkB,IAARA,EAAK,GAAQ,IAEjE6D,IAAc7B,EAAYS,SAAWrD,EAAWsE,OAExD,OACE,sBAAKxF,UAAU,MAAf,UAEE,wBAAQA,UAAU,cAAlB,SACE,oBAAIA,UAAU,qBAAd,iCAEF,cAAC,EAAD,CAAWJ,SApCQ,SAACgG,GACtB5B,EAAQ,GACRE,EAAa,GACbH,EAAe6B,EAAMC,OAAOC,UAoCxB1B,EAcA,cAAC,EAAD,IAZCuB,EASC,cAAC,EAAD,IARA,qCACA,cAAC,EAAD,CAAUzE,WAAY4C,EAAc5C,EAAauE,EAAmBlF,iBAhCnD,SAACC,EAAcF,GAClCE,GAIuB,IAAtBoD,EAAW4B,QACZtB,EAAa,GACfL,EAAcD,EAAWmC,QAAQ,SAAA1E,GAAI,OAAIf,EAAQgB,KAAOD,EAAKC,QAL7DuC,EAAc,GAAD,mBAAKD,GAAL,CAAiBtD,MA8B8Ea,qBArBpF,SAACb,GACzB,OAAOsD,EAAWoC,MAAM,SAAA3E,GAAI,OAAIA,EAAKC,KAAOhB,EAAQgB,WAqB7C2C,GACD,cAAC,EAAD,CAAqBlC,aAtCN,SAAC6D,EAAOE,GAC/B9B,EAAQ8B,IAqCqDhE,KAAMA,EAAME,MAAOiC,WE1GpFgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bd44451a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './SearchBox.scss'\r\n\r\nexport const SearchBox = ({ onChange }) => {\r\n\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    return (\r\n        <input \r\n            className={`search ${isActive ? 'search--active' : ''}`}\r\n            type=\"search\"\r\n            placeholder=\"search characters\"\r\n            onChange = {onChange}\r\n            onFocus={() => setIsActive(true)}\r\n            onBlur={() => setIsActive(false)}\r\n        />\r\n    );\r\n} \r\n\r\nexport default SearchBox;","import React from 'react'\r\nimport './Card.scss'\r\n\r\nconst Card = ( { element, onBookmarkChange, isBookmarked } ) => {\r\n    const {thumbnail, name} = element;\r\n    const link = thumbnail.path + '.' + thumbnail.extension;\r\n    \r\n    return (\r\n        <figure className=\"card\">\r\n        <div className=\"card__img\">\r\n            <img src={link} alt=\"img\"></img>\r\n        </div>\r\n        <figcaption className=\"card__name\">{name}</figcaption>\r\n        <button className={`card__bookmark ${isBookmarked ? 'bookmarked' : null}`} onClick={() => onBookmarkChange(isBookmarked, element)}>bookmark</button>\r\n        </figure>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './CardList.scss';\r\nimport Card from '../cardItem/Card';\r\n\r\nconst CardList = ( { characters, onBookmarkChange, isBookmarkedFunction } ) => {\r\n\r\n    return (\r\n        <div className=\"cardList\">\r\n        {\r\n            characters.map( (item) => {\r\n                const isBookmarked = isBookmarkedFunction(item);\r\n                return <Card key={item.id} element={item} isBookmarked={isBookmarked} onBookmarkChange={onBookmarkChange}/>\r\n            })\r\n        }  \r\n        </div>\r\n    );\r\n} \r\n\r\nexport default CardList;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport './Pagination.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PaginationControlled({ page, handleChange, count}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography>Page: {page}</Typography>\r\n      <Pagination count={count} page={page} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\n","export const apiKey = 'fca86e3537b62c5378f812c07e1786fa';","import React from 'react'\r\nimport './Spinner.scss'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='loader-container'>\r\n            <div className=\"loader\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react'\r\nimport './NoResultScreen.scss'\r\n\r\nconst NoResultScreen = () => {\r\n    return (\r\n        <div className='no-result-screen'>\r\n            <p className=\"no-result-screen__content\">\r\n                No Results, Try Search Again\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoResultScreen;\r\n","import React,{ useState, useEffect } from 'react';\r\nimport './App.scss';\r\nimport { useLocalStorageState } from './utils';\r\nimport SearchBox from './components/search-box/SearchBox';\r\nimport CardList from './components/card-list/CardList';\r\nimport PaginationControled from './components/pagination/PaginationControled';\r\nimport { apiKey } from './apiKey';\r\nimport axios from 'axios';\r\nimport Spinner from './components/spinner/Spinner';\r\nimport NoResultScreen from './components/no-results-screen/NoResultScreen';\r\n\r\n\r\nconst App = () => {\r\n\r\n  //state\r\n  const [ bookmarked, setBookmarked ] = useLocalStorageState('marvel_characters'); \r\n  const [ searchField, setSearchField ] = useState('');\r\n  const [ page, setPage ] = useState(1);\r\n  const [ pageCount, setPageCount ] = useState(0);\r\n  const [ characters, setCharacters ] = useState([]);\r\n  const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n  // fetch charactes inside useEffect\r\n  useEffect( () => {\r\n    let active = true;\r\n    const name = searchField.trim();\r\n    if(name){\r\n        setIsLoading(true);\r\n        const offset = (page-1)*20;\r\n        axios({\r\n          url: 'https://gateway.marvel.com:443/v1/public/characters',\r\n          params: {\r\n            apikey: apiKey,\r\n            nameStartsWith: name,\r\n            limit: 20,\r\n            offset: offset,\r\n          }\r\n        }).\r\n        then( response => {\r\n            const {results, total} = response.data.data;\r\n            if(active){\r\n              setCharacters(results);\r\n              setPageCount(Math.ceil((total / 20)));\r\n              setIsLoading(false);\r\n            }\r\n        }\r\n        ).catch( e => {\r\n          setCharacters([])\r\n          setIsLoading(false)\r\n        })\r\n      }\r\n    else{\r\n      setCharacters([]);\r\n      setPageCount(Math.ceil((bookmarked.length / 20)));\r\n      setIsLoading(false);\r\n    }\r\n\r\n    return () => {\r\n      // set flag to false to prevent previous updating if search input changes\r\n      active = false;\r\n    }\r\n      },[searchField, page]);\r\n\r\n      \r\n\r\n  const onSearchChange = (event) => {\r\n    setPage(1);\r\n    setPageCount(0);\r\n    setSearchField(event.target.value);\r\n  }\r\n\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const onBookmarkChange = (isBookmarked, element) => {\r\n    if(!isBookmarked){\r\n      setBookmarked([...bookmarked, element]);\r\n    }\r\n    else{\r\n      if(bookmarked.length === 1)\r\n        setPageCount(0);\r\n      setBookmarked(bookmarked.filter( item => element.id !== item.id))\r\n    }\r\n    }\r\n  \r\n    const checkIsBookmarked = (element) => {\r\n      return bookmarked.some( item => item.id === element.id);\r\n    }\r\n    \r\n    const bookmarkedRender = bookmarked.slice((page-1) * 20, (page-1)*20 + 20);\r\n    // flag for no results, if user types something that doesn't match any marvel character to show no results component\r\n    const noResults = !!searchField.trim() && !characters.length\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* header and search  */}\r\n      <header className=\"main-header\">\r\n        <h1 className=\"main-header__title\">MARVEL CHARACTERS</h1>\r\n      </header>\r\n      <SearchBox onChange={onSearchChange} />\r\n      \r\n      {/* if loading show spinner */}\r\n      {!isLoading ? (\r\n        // if no result show no result component\r\n        !noResults ? (\r\n          <>\r\n          <CardList characters={searchField ? characters : bookmarkedRender } onBookmarkChange={onBookmarkChange} isBookmarkedFunction={checkIsBookmarked}/>\r\n          {!!pageCount &&\r\n            <PaginationControled handleChange={handlePageChange} page={page} count={pageCount}/>\r\n          }\r\n          </>\r\n          )\r\n          :\r\n          <NoResultScreen />\r\n          )\r\n        : \r\n        <Spinner />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import { useState, useRef, useEffect } from 'react';\r\n\r\nexport function useLocalStorageState(key, defaultValue = [], { serialize = JSON.stringify, deserialize = JSON.parse } = {} ) {\r\n\r\n    const [ state, setState ] = useState( () => {\r\n        const valueInLocalStorage = window.localStorage.getItem(key);\r\n        if(valueInLocalStorage)\r\n            return deserialize(valueInLocalStorage)\r\n        return typeof defaultValue === 'function' ? defaultValue() : defaultValue;   \r\n        })\r\n \r\n    const prevKeyRef = useRef(key);\r\n\r\n    useEffect( () => {\r\n    const prevKey = prevKeyRef.current;\r\n    if(prevKey !== key){\r\n        window.localStorage.removeItem(prevKey);\r\n    }\r\n    prevKeyRef.current = key;\r\n\r\n    window.localStorage.setItem(key, serialize(state));\r\n    }, [ state, serialize, key]);\r\n\r\n    return [ state, setState ];\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}